kind: Namespace
apiVersion: v1
metadata:
  name: log
  labels:
    name: log
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: promtail
  name: promtail-config
  namespace: log
data:
  config.yml: |
    clients:
      - url: http://log:3100/loki/api/v1/push
        backoff_config:
          max_period: 10m
          max_retries: 100
          min_period: 500ms
        batchsize: 1048576
        batchwait: 15s
        timeout: 5s

    positions:
      filename: /tmp/positions.yml
    
    scrape_configs:
    - job_name: kubernetes-pod
      pipeline_stages:
        - regex:
            expression: "^(?s)(?P<time>\\\\S+?) (?P<stream>stdout|stderr) (?P<flags>\\\\S+?) (?P<service>\\\\S+?) \\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2} (?P<level>INFO|ERROR|WARNING) (?P<content>.*)$"
        - labels:
            stream:
            service:
            level:
        - timestamp:
            source: time
            format: RFC3339Nano
        - output:
            source: content
      static_configs:
      - targets:
          - localhost
        labels:
          job: kubernetes-pod
          node_name: ${NODE_NAME}
          __path__:  /var/log/pods/{bot,panel,hems,sensor}*/*/*.log

---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: promtail
  namespace: log
  labels:
    app: promtail
spec:
  selector:
    matchLabels:
      app: promtail
  template:
    metadata:
      labels:
        app: promtail
    spec:
      volumes:
        - name: config
          configMap:
            name: promtail-config
        - name: log
          hostPath:
            path: /var/log/pods
      containers:
        - name: promtail
          image: grafana/promtail:2.6.1
          args:
            - '-config.file=/etc/promtail/config.yml'
            - '-config.expand-env'
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: log
              mountPath: /var/log/pods
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
      dnsPolicy: Default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/server
                  operator: Exists
              - matchExpressions:
                - key: node-role.kubernetes.io/sensor
                  operator: Exists
