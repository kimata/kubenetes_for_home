# NOTE:
# ホスト名 database のサーバー上に /data/grafana ディレクトリがあることを想定．
# 今後，ストレージを切り離すことを想定して，hostPath ではなく，persistentVolumeClaim を使う．

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: grafana
  name: grafana-config
  namespace: server
data:
  grafana.ini: |
    [server]
    protocol = http
    http_port = 3000
    domain = proxy.green-rabbit.net
    [smtp]
    enabled = true
    host = mail-local.green-rabbit.net:25
    skip_verify = true
---
kind: Service
apiVersion: v1
metadata:
  name: grafana
  namespace: server
  annotations:
    metallb.universe.tf/address-pool: default
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: LoadBalancer
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-grafana
  namespace: server
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
  - ReadWriteOnce
  local:
    path: /data/grafana
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - database
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-grafana
  namespace: server
spec:
  storageClassName: manual
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: server
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana-oss:9.0.2-ubuntu
        env:
        - name: GF_RENDERING_SERVER_URL
          value: http://renderer:8081/render
        - name: GF_RENDERING_CALLBACK_URL
          value: http://grafana:3000/
        - name: GF_UNIFIED_ALERTING_ENABLED
          value: "true"
        - name: GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE
          value: "true"
        volumeMounts:
        - name: config
          mountPath: /etc/grafana
        - name: data
          mountPath: /var/lib/grafana
        ports:
        - containerPort: 3000
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 256Mi
        livenessProbe:
          httpGet:
            port: 3000
            path: /login
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 3

      - name: renderer
        image: grafana/grafana-image-renderer:3.5.0
        ports:
        - containerPort: 8081
        
      volumes:
      - name: config
        configMap:
          name: grafana-config
      - name: data
        persistentVolumeClaim:
          claimName: pvc-grafana
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/hostname: database
